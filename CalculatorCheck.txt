#!/usr/bin/perl
## Initially generated by Win32-GuiTest Recorder (v1.03)
#annabelle cohen 

## Pragmas/Directives
use strict;
use warnings;

## Imports
use Win32::GuiTest qw/:ALL/;
use Win32::Clipboard;

$Win32::GuiTest::debug = 0; # Set to "1" to enable debug output.

## Variables/Constants
my $fgWindow = 0; # Foreground 
open(my $fout, '>', 'report.txt');



## Main/Core
#my @lines;
my @arr;
my $file = "data.txt";
my $line;
my $loops=0;
my $result;


@arr=FindWindowLike(undef,'מחשבון');
SetForegroundWindow($arr[0]);
SetFocus($arr[0]);
sleep(2);

#going to the dates calculator.
SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY);
SendKeys('e');
SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP);

#Sanity check.
	open(my $fh, "<", $file) or die "Unable to open < data.txt: $!";
	SetFocus($fh);

#Same Dates for  on the default option.
$line=readline(*$fh);
sleep(2);
my @words = split ' ', $line;
chomp @words;
foreach my $row (@words){
SendKeys($row);
sleep(1);
}

SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY);
SendKeys('c');
SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP);
$result = Win32::Clipboard::GetText();
print $fout "$result \n";


#moving 30 days ago.
SendKeys('{ENT}');
sleep(1);

for(my $i= 0;$i<3;$i++){
	SendKeys('{TAB}');
	sleep(1);
}

for(my $i= 0;$i<30;$i++){
	SendKeys('{RIGHT}');
}
sleep(1);
SendKeys('{ENT}');
sleep(1);

SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY);
SendKeys('c');
SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP);
$result = Win32::Clipboard::GetText();
print $fout "$result \n";

#Moving to the another option subtraction and add dates.
SendKeys('{TAB}');
sleep(1);
SendKeys('{TAB}');
sleep(1);
SendKeys('{ENT}');
sleep(1);
SendKeys('{DOW}');
sleep(1);
SendKeys('{ENT}');
sleep(1);

#add the most big number of years, numbe of month , number of days.
#add the most little number of years , number of month , number of days.
$loops=0;
while( $loops < 2 ){
$line=readline(*$fh);
sleep(2);
my @words1= split ' ', $line;
chomp @words1;
	foreach my $row (@words1){
	SendKeys($row);
	sleep(1);
	}
$loops ++;
sleep(1);
SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY);
SendKeys('c');
SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP);
$result = Win32::Clipboard::GetText();
print $fout "$result \n";
}

#next set for subtraction
for(my $i= 0;$i<5;$i++){
	SendKeys('{TAB}');
	sleep(1)
}

#change for subtraction.
SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY);
SendKeys('{SPC}');
SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP);

$loops=0;
#first loop: subtraction of the most bigger number that we can.
#second loop: subtraction of the most minimal number that we can. 
#thirs loop:subtraction of the upper limit that still not out of bound.
#fourth loop:we will increase only the year in 1 for checking if we get out of bound.
#fifth loop:we will fix the year and then increase only the month in 1(expecting out of bound).
#sixth loop:we will fix the month and then increase only the days in 1(expecting out of bound).
while( $loops < 6 ){
	$line=readline(*$fh);
	sleep(2);
	my @words4 = split ' ', $line;
	chomp @words4;
	foreach my $row (@words4){
	SendKeys($row);
	sleep(1);
	}
	sleep(1);
	$loops++;
SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY);
SendKeys('c');
SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP);
$result = Win32::Clipboard::GetText();
print $fout "$result \n";	
}

#moving to the most minimal century
for(my $i= 0;$i<3;$i++){
	SendKeys('{TAB}');
	sleep(1);
}

for(my $i= 0;$i<3;$i++){
	SendKeys('{ENT}');
	sleep(1);
}

for(my $i= 0;$i<2;$i++){
	SendKeys('{TAB}');
	sleep(1);
}

for(my $i= 0;$i<105;$i++){
	SendKeys('{UP}');
}

for(my $i= 0;$i<3;$i++){
	SendKeys('{RIGHT}');
	sleep(1);
}

for(my $i= 0;$i<3;$i++){
	SendKeys('{ENT}');
	sleep(1);
}


$loops=0;
#set for subtraction in the most minimal century.
#first loop: subtraction of zero .
#second loop: subtraction of 1(expecting for out of bound).
while( $loops < 2 ){
	$line=readline(*$fh);
	sleep(2);
	my @words4 = split ' ', $line;
	chomp @words4;
	foreach my $row (@words4){
	SendKeys($row);
	sleep(1);
	}
	sleep(1);
	$loops++;
SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY);
SendKeys('c');
SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP);
$result = Win32::Clipboard::GetText();
print $fout "$result \n";	
}


for(my $i= 0;$i<4;$i++){
	SendKeys('{TAB}');
	sleep(1)
}

#add set for the most minimal century.
SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY);
SendKeys('{SPC}');
SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP);


$loops=0;
#first loop: add of zero .
#second loop: most bigger number that we can.
while( $loops < 2 ){
	$line=readline(*$fh);
	sleep(2);
	my @words4 = split ' ', $line;
	chomp @words4;
	foreach my $row (@words4){
	SendKeys($row);
	sleep(1);
	}
	sleep(1);
	$loops++;
SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY);
SendKeys('c');
SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP);
$result = Win32::Clipboard::GetText();
print $fout "$result \n";	
}

close $fout;						
							
##Subroutines

